# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - waritsara-a2-project

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: npm install and build
        run: |
          npm install
          npm run build
          
      - name: Create PM2 ecosystem file
        run: |
          cat > ecosystem.config.js << 'EOL'
          module.exports = {
            apps: [
              {
                name: 'car-rental-system',
                script: 'npm',
                args: 'start',
                instances: 'max',
                exec_mode: 'cluster',
                autorestart: true,
                watch: false,
                max_memory_restart: '1G',
                env: {
                  NODE_ENV: 'production',
                  PORT: 8080
                }
              }
            ]
          };
          EOL

      - name: Create startup script
        run: |
          cat > startup.sh << 'EOL'
          #!/bin/bash
          cd /home/site/wwwroot
          npm install pm2 -g
          pm2 start ecosystem.config.js
          pm2 save
          EOL
          chmod +x startup.sh
      
      - name: Add web.config for IIS
        run: |
          cat > web.config << 'EOL'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="startup.sh" verb="*" modules="iisnode" />
              </handlers>
              <rewrite>
                <rules>
                  <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                    <match url="^startup.sh\/debug[\/]?" />
                  </rule>
                  <rule name="StaticContent">
                    <action type="Rewrite" url="public{REQUEST_URI}" />
                  </rule>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
                    </conditions>
                    <action type="Rewrite" url="startup.sh" />
                  </rule>
                </rules>
              </rewrite>
              <security>
                <requestFiltering>
                  <hiddenSegments>
                    <remove segment="bin" />
                  </hiddenSegments>
                </requestFiltering>
              </security>
              <httpErrors existingResponse="PassThrough" />
              <iisnode node_env="production" />
            </system.webServer>
          </configuration>
          EOL
      
      - name: Create deployment file
        run: |
          echo "[config]" > .deployment
          echo "SCM_DO_BUILD_DURING_DEPLOYMENT=true" >> .deployment
          echo "WEBSITE_RUN_FROM_PACKAGE=0" >> .deployment
          echo "COMMAND=bash startup.sh" >> .deployment

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_065E36C3103E447BBA0C6FD2BDAD676D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_84DE21E0E46D4CDC84E3AE3DD0D8DA89 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_D07F277308E94574B8E55FDB3BBA713E }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'waritsara-a2-project'
          slot-name: 'Production'
          package: .
          startup-command: 'pm2 start ecosystem.config.js --no-daemon'
          